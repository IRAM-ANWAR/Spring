<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
		
		1. <beans>
The root tag <beans> defines the configuration file for the Spring application context.
All Spring-managed objects (beans) are defined within this tag.
2. xmlns Attributes
These attributes specify the XML namespaces being used in this file. Each namespace corresponds to a set of XML tags or rules provided by Spring.

Examples:
xmlns="http://www.springframework.org/schema/beans"

This is the default namespace for Spring's core bean configuration.
It allows you to define beans and their properties.
xmlns:context="http://www.springframework.org/schema/context"

This namespace is used for advanced Spring features, like enabling annotation-based configuration or scanning for components in the package.
xmlns:p="http://www.springframework.org/schema/p"

This is a shortcut namespace for setting bean properties using attributes instead of <property> tags.
3. xsi:schemaLocation
This maps the namespaces to the actual XML Schema files (.xsd), which define the rules for valid XML.
Think of .xsd files as a guide that explains what elements (tags) you can use and how they should be structured.
In This Example:
xml
Copy
Edit
xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">
http://www.springframework.org/schema/beans: The namespace for the core Spring configuration tags.

http://www.springframework.org/schema/beans/spring-beans.xsd: The corresponding schema file that defines the structure for the "beans" namespace.

http://www.springframework.org/schema/context: The namespace for the Spring context configuration tags.

http://www.springframework.org/schema/context/spring-context.xsd: The corresponding schema file for the "context" namespace.

Essentially, these lines tell Spring how to validate the XML file and which tags youâ€™re allowed to use.

In Short:
The xmlns attributes tell Spring which features you're using.
The xsi:schemaLocation maps the features (namespaces) to their rules (schemas).
This configuration file allows you to define and manage beans (objects) in a Spring application.
	-->

    <!-- Define a bean for the POJO -->
    <!--Setter Injection-->
   
	  <bean id="collection" class="com.springcore.Collection">
        <property name="list">
        	<list>
        		<value>element1</value>
        		<value>element2</value>
        		<value>element1</value>
        	</list>
        </property>
        <property name="set"> 
        	<set>
        		<value>element1</value>
        		<value>element2</value>
        		<value>element3</value>
        	</set>
        </property>
        <property name="map">
        	<map>
        	<entry key="key1" value="value1"/>
        	</map>
        </property>
    </bean>
    
     <bean id="studentBean" class="com.springcore.Student">
        <property name="studentId" value="22344" />
        <property name="studentName" value="Iram Anwar" /> <!--value as a attribute,-->
        <property name="studentAddress" value="XYZ" />
        <property name="collection">
        	<ref bean="collection"/>
        </property>
    </bean>
    
     <bean id="studentBean2" class="com.springcore.Student" p:studentId="234" p:studentName="ANish" p:studentAddress="XYZ"/><!--p schema-->
		
		
</beans>